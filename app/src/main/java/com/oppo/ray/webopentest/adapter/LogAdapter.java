package com.oppo.ray.webopentest.adapter;

import android.content.res.Resources;
import android.support.v7.widget.RecyclerView;
import android.view.LayoutInflater;
import android.view.ViewGroup;

import com.oppo.ray.webopentest.R;
import com.oppo.ray.webopentest.autotest.ExecuteMsg;
import com.oppo.ray.webopentest.autotest.ExecuteUrl;
import com.oppo.ray.webopentest.autotest.IExecuteMsgConstant;

import java.util.List;

/**
 * the adapter for logs
 */
public class LogAdapter extends RecyclerView.Adapter<LogViewHolder> implements IExecuteMsgConstant {
    private List<ExecuteMsg> mLogs = null;

    public LogAdapter(List<ExecuteMsg> urls) {
        this.mLogs = urls;
    }

    @Override
    public LogViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {
        LogViewHolder viewHolder =
                new LogViewHolder(LayoutInflater.from(parent.getContext()).inflate(R.layout.log_item_view, null));
        return viewHolder;
    }

    @Override
    public void onBindViewHolder(LogViewHolder holder, int position) {
        Resources res = holder.logView.getContext().getResources();
        ExecuteMsg msg = mLogs.get(position);
        String text = "";
        switch (msg.code) {
            case DOING: {
                ExecuteUrl executeUrl = msg.url;
                text = String.format(res.getString(R.string.log_item_text), executeUrl.mExecuteTimes, executeUrl.url);
                break;
            }
            case START: {
                text = res.getString(R.string.log_item_text_start);
                break;
            }
            case STOP: {
                text = res.getString(R.string.log_item_text_stop);
                break;
            }
            case PAUSE: {
                text = res.getString(R.string.log_item_text_pause);
                break;
            }
            case ERROR: {
                text = res.getString(R.string.log_item_text_error);
                break;
            }
            case FINISH: {
                text = res.getString(R.string.log_item_text_finish);
                break;
            }
        }
        holder.logView.setText(text);
    }

    @Override
    public int getItemCount() {
        return mLogs.size();
    }
}
